@import "variable";

@mixin colorGenerator($colors, $code, $selector: ".") {
  @for $i from 1 through length($colors) {
    $a: $i * 100;
    #{$selector}bg-#{$code}-#{$a} {
      background-color: nth($colors, $i);
    }
    #{$selector}border-#{$code}-#{$a} {
      border: 1px solid nth($colors, $i);
    }
    #{$selector}text-#{$code}-#{$a} {
      color: nth($colors, $i);
    }

    //hover

    #{$selector}hover-bg-#{$code}-#{$a} {
      &:hover {
        background-color: nth($colors, $i);
      }
    }
    #{$selector}hover-border-#{$code}-#{$a} {
      &:hover {
        border: 1px solid nth($colors, $i);
      }
    }
    #{$selector}hover-text-#{$code}-#{$a} {
      &:hover {
        color: nth($colors, $i);
      }
    }
  }
}
@mixin hoverColorGenerator($colors, $code, $selector: ".") {
  @for $i from 1 through length($colors) {
    $a: $i * 100;
    #{$selector}#{"hover:"}bg-#{$code}-#{$a} {
      background-color: nth($colors, $i);
    }
    #{$selector}border-#{$code}-#{$a} {
      border: 1px solid nth($colors, $i);
      // &:focus {
      //   border: 1px solid nth($colors, $i);
      // }
    }
    #{$selector}text-#{$code}-#{$a} {
      color: nth($colors, $i);
    }
  }
}

@mixin marginPaddingGenerator($total, $selector: ".") {
  @for $i from 0 through $total {
    #{$selector}ml-#{$i} {
      margin-left: #{$i}px;
    }
    #{$selector}mr-#{$i} {
      margin-right: #{$i}px;
    }
    #{$selector}mt-#{$i} {
      margin-top: #{$i}px;
    }
    #{$selector}mb-#{$i} {
      margin-bottom: #{$i}px;
    }
    #{$selector}my-#{$i} {
      margin-bottom: #{$i}px;
      margin-top: #{$i}px;
    }
    #{$selector}mx-#{$i} {
      margin-left: #{$i}px;
      margin-right: #{$i}px;
    }
    #{$selector}pl-#{$i} {
      padding-left: #{$i}px;
    }
    #{$selector}pr-#{$i} {
      padding-right: #{$i}px;
    }
    #{$selector}pt-#{$i} {
      padding-top: #{$i}px;
    }
    #{$selector}pb-#{$i} {
      padding-bottom: #{$i}px;
    }
    #{$selector}py-#{$i} {
      padding-bottom: #{$i}px;
      padding-top: #{$i}px;
    }
    #{$selector}px-#{$i} {
      padding-left: #{$i}px;
      padding-right: #{$i}px;
    }
  }
}
@mixin gapGenerator($total, $selector: ".") {
  @for $i from 0 through $total {
    #{$selector}gap-#{$i} {
      gap: #{$i}px;
    }
    #{$selector}gap-x-#{$i} {
      column-gap: #{$i}px;
    }
    #{$selector}gap-y-#{$i} {
      row-gap: #{$i}px;
    }
  }
}
@mixin heightWidthGenerator($total, $selector: ".") {
  @for $i from 0 through $total {
    #{$selector}h-#{$i} {
      height: #{$i}px;
    }
    #{$selector}w-#{$i} {
      width: #{$i}px;
    }
  }
}

@mixin heightWidthPesenGenerator($selector: ".") {
  @for $i from 0 through 100 {
    #{$selector}h-p-#{$i} {
      height: #{$i}#{"%"};
    }
    #{$selector}w-p-#{$i} {
      width: #{$i}#{"%"};
    }
  }
}

@mixin borderRadiusGenerator($selector: ".") {
  @for $i from 0 through 100 {
    #{$selector}radius-p-#{$i} {
      border-radius: #{$i}#{"%"};
    }
    #{$selector}radius-#{$i} {
      border-radius: #{$i}#{"px"};
    }
    #{$selector}radius-r-#{$i} {
      border-radius: 0px #{$i}px #{$i}px 0px;
    }
    #{$selector}radius-l-#{$i} {
      border-radius: #{$i}px 0px 0px #{$i}px;
    }
    #{$selector}radius-t-#{$i} {
      border-radius: #{$i}px #{$i}px 0px 0px;
    }
    #{$selector}radius-b-#{$i} {
      border-radius: 0px 0px #{$i}px #{$i}px;
    }
  }
}

@mixin fontSizeGenerator($selector: ".") {
  @for $i from 0 through 100 {
    #{$selector}font-size-#{$i} {
      font-size: #{$i}px;
    }
  }
}

@mixin borderGenerator($colors, $code, $selector: ".") {
  @for $i from 1 through length($colors) {
    $a: $i * 100;

    #{$selector}border-#{$code}-#{$a} {
      border: 1px solid nth($colors, $i);
    }
    #{$selector}border-r-#{$code}-#{$a} {
      border-right: 1px solid nth($colors, $i);
    }
    #{$selector}border-l-#{$code}-#{$a} {
      border-left: 1px solid nth($colors, $i);
    }
    #{$selector}border-t-#{$code}-#{$a} {
      border-top: 1px solid nth($colors, $i);
    }
    #{$selector}border-b-#{$code}-#{$a} {
      border-bottom: 1px solid nth($colors, $i);
    }
  }
}
@mixin firstSetup($selector: ".") {
  @include colorGenerator($neutralColor, $neutralCode, $selector);
  @include colorGenerator($primaryColor, $primaryCode, $selector);
  @include colorGenerator($warningColor, $warningCode, $selector);
  @include colorGenerator($successColor, $successCode, $selector);
  @include colorGenerator($dangerColor, $dangerCode, $selector);
  @include colorGenerator($infoColor, $infoCode, $selector);
  @include colorGenerator($secondaryColor, $secondaryCode, $selector);
  @include marginPaddingGenerator(300, $selector);
  @include gapGenerator(300, $selector);
  @include heightWidthGenerator(700, $selector);
  @include heightWidthPesenGenerator($selector);
  @include borderRadiusGenerator($selector);
  @include fontSizeGenerator($selector);
  @include borderGenerator($secondaryColor, $secondaryCode, $selector);
}
